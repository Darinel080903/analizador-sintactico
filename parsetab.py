
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASIGNACION CORRER FUNCION ID IMPRIMIR ITERAR LLAVE_DERECHA LLAVE_IZQUIERDA MAS MAYOR_QUE MENOR_QUE MENOS NUMERO OPERADOR_FLUJO PARENTESIS_DERECHO PARENTESIS_IZQUIERDO PUNTO_Y_COMA REALIZA SI VARIABLE VECES\n    program : program declaration\n            | declaration\n    \n    function_declaration : FUNCION ID OPERADOR_FLUJO LLAVE_IZQUIERDA program LLAVE_DERECHA\n    | FUNCION ID CORRER OPERADOR_FLUJO LLAVE_IZQUIERDA program LLAVE_DERECHA\n    \n    iterate_statement : ITERAR NUMERO VECES OPERADOR_FLUJO expressionop\n    \n    expressionop : expression MAS expression\n               | expression MENOS expression\n               | expression MAYOR_QUE expression\n    \n    conditional_statement : SI expression MAYOR_QUE expression REALIZA LLAVE_IZQUIERDA declaration LLAVE_DERECHA\n    \n    print_statement : IMPRIMIR PARENTESIS_IZQUIERDO expression PARENTESIS_DERECHO PUNTO_Y_COMA\n    \n    declaration : variable_declaration\n                | function_declaration\n                | iterate_statement\n                | print_statement\n                | conditional_statement\n                | call_function\n                | expressionop\n                | expressionop PUNTO_Y_COMA\n    \n    call_function : OPERADOR_FLUJO ID PUNTO_Y_COMA\n    \n    variable_declaration : VARIABLE ID ASIGNACION expression PUNTO_Y_COMA\n    \n    expression : NUMERO\n               | ID\n    '
    
_lr_action_items = {'VARIABLE':([0,1,2,3,4,5,6,7,8,9,11,16,19,20,31,32,33,36,41,46,47,48,49,50,52,53,54,55,57,],[10,10,-2,-11,-12,-13,-14,-15,-16,-17,-22,-21,-1,-18,-6,-7,-8,-19,10,-20,10,10,-5,-10,-3,10,10,-4,-9,]),'FUNCION':([0,1,2,3,4,5,6,7,8,9,11,16,19,20,31,32,33,36,41,46,47,48,49,50,52,53,54,55,57,],[13,13,-2,-11,-12,-13,-14,-15,-16,-17,-22,-21,-1,-18,-6,-7,-8,-19,13,-20,13,13,-5,-10,-3,13,13,-4,-9,]),'ITERAR':([0,1,2,3,4,5,6,7,8,9,11,16,19,20,31,32,33,36,41,46,47,48,49,50,52,53,54,55,57,],[15,15,-2,-11,-12,-13,-14,-15,-16,-17,-22,-21,-1,-18,-6,-7,-8,-19,15,-20,15,15,-5,-10,-3,15,15,-4,-9,]),'IMPRIMIR':([0,1,2,3,4,5,6,7,8,9,11,16,19,20,31,32,33,36,41,46,47,48,49,50,52,53,54,55,57,],[17,17,-2,-11,-12,-13,-14,-15,-16,-17,-22,-21,-1,-18,-6,-7,-8,-19,17,-20,17,17,-5,-10,-3,17,17,-4,-9,]),'SI':([0,1,2,3,4,5,6,7,8,9,11,16,19,20,31,32,33,36,41,46,47,48,49,50,52,53,54,55,57,],[18,18,-2,-11,-12,-13,-14,-15,-16,-17,-22,-21,-1,-18,-6,-7,-8,-19,18,-20,18,18,-5,-10,-3,18,18,-4,-9,]),'OPERADOR_FLUJO':([0,1,2,3,4,5,6,7,8,9,11,16,19,20,25,31,32,33,35,36,37,41,46,47,48,49,50,52,53,54,55,57,],[14,14,-2,-11,-12,-13,-14,-15,-16,-17,-22,-21,-1,-18,34,-6,-7,-8,42,-19,43,14,-20,14,14,-5,-10,-3,14,14,-4,-9,]),'NUMERO':([0,1,2,3,4,5,6,7,8,9,11,15,16,18,19,20,22,23,24,28,30,31,32,33,36,39,41,43,46,47,48,49,50,52,53,54,55,57,],[16,16,-2,-11,-12,-13,-14,-15,-16,-17,-22,27,-21,16,-1,-18,16,16,16,16,16,-6,-7,-8,-19,16,16,16,-20,16,16,-5,-10,-3,16,16,-4,-9,]),'ID':([0,1,2,3,4,5,6,7,8,9,10,11,13,14,16,18,19,20,22,23,24,28,30,31,32,33,36,39,41,43,46,47,48,49,50,52,53,54,55,57,],[11,11,-2,-11,-12,-13,-14,-15,-16,-17,21,-22,25,26,-21,11,-1,-18,11,11,11,11,11,-6,-7,-8,-19,11,11,11,-20,11,11,-5,-10,-3,11,11,-4,-9,]),'$end':([1,2,3,4,5,6,7,8,9,11,16,19,20,31,32,33,36,46,49,50,52,55,57,],[0,-2,-11,-12,-13,-14,-15,-16,-17,-22,-21,-1,-18,-6,-7,-8,-19,-20,-5,-10,-3,-4,-9,]),'LLAVE_DERECHA':([2,3,4,5,6,7,8,9,11,16,19,20,31,32,33,36,46,47,49,50,52,53,55,56,57,],[-2,-11,-12,-13,-14,-15,-16,-17,-22,-21,-1,-18,-6,-7,-8,-19,-20,52,-5,-10,-3,55,-4,57,-9,]),'PUNTO_Y_COMA':([9,11,16,26,31,32,33,40,44,],[20,-22,-21,36,-6,-7,-8,46,50,]),'MAS':([11,12,16,],[-22,22,-21,]),'MENOS':([11,12,16,],[-22,23,-21,]),'MAYOR_QUE':([11,12,16,29,],[-22,24,-21,39,]),'PARENTESIS_DERECHO':([11,16,38,],[-22,-21,44,]),'REALIZA':([11,16,45,],[-22,-21,51,]),'PARENTESIS_IZQUIERDO':([17,],[28,]),'ASIGNACION':([21,],[30,]),'CORRER':([25,],[35,]),'VECES':([27,],[37,]),'LLAVE_IZQUIERDA':([34,42,51,],[41,48,54,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,41,48,],[1,47,53,]),'declaration':([0,1,41,47,48,53,54,],[2,19,2,19,2,19,56,]),'variable_declaration':([0,1,41,47,48,53,54,],[3,3,3,3,3,3,3,]),'function_declaration':([0,1,41,47,48,53,54,],[4,4,4,4,4,4,4,]),'iterate_statement':([0,1,41,47,48,53,54,],[5,5,5,5,5,5,5,]),'print_statement':([0,1,41,47,48,53,54,],[6,6,6,6,6,6,6,]),'conditional_statement':([0,1,41,47,48,53,54,],[7,7,7,7,7,7,7,]),'call_function':([0,1,41,47,48,53,54,],[8,8,8,8,8,8,8,]),'expressionop':([0,1,41,43,47,48,53,54,],[9,9,9,49,9,9,9,9,]),'expression':([0,1,18,22,23,24,28,30,39,41,43,47,48,53,54,],[12,12,29,31,32,33,38,40,45,12,12,12,12,12,12,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program declaration','program',2,'p_program','sintaxis.py',7),
  ('program -> declaration','program',1,'p_program','sintaxis.py',8),
  ('function_declaration -> FUNCION ID OPERADOR_FLUJO LLAVE_IZQUIERDA program LLAVE_DERECHA','function_declaration',6,'p_function_declaration','sintaxis.py',19),
  ('function_declaration -> FUNCION ID CORRER OPERADOR_FLUJO LLAVE_IZQUIERDA program LLAVE_DERECHA','function_declaration',7,'p_function_declaration','sintaxis.py',20),
  ('iterate_statement -> ITERAR NUMERO VECES OPERADOR_FLUJO expressionop','iterate_statement',5,'p_iterate_statement','sintaxis.py',27),
  ('expressionop -> expression MAS expression','expressionop',3,'p_operations','sintaxis.py',34),
  ('expressionop -> expression MENOS expression','expressionop',3,'p_operations','sintaxis.py',35),
  ('expressionop -> expression MAYOR_QUE expression','expressionop',3,'p_operations','sintaxis.py',36),
  ('conditional_statement -> SI expression MAYOR_QUE expression REALIZA LLAVE_IZQUIERDA declaration LLAVE_DERECHA','conditional_statement',8,'p_conditional_statement','sintaxis.py',43),
  ('print_statement -> IMPRIMIR PARENTESIS_IZQUIERDO expression PARENTESIS_DERECHO PUNTO_Y_COMA','print_statement',5,'p_print_statement','sintaxis.py',50),
  ('declaration -> variable_declaration','declaration',1,'p_declaration','sintaxis.py',57),
  ('declaration -> function_declaration','declaration',1,'p_declaration','sintaxis.py',58),
  ('declaration -> iterate_statement','declaration',1,'p_declaration','sintaxis.py',59),
  ('declaration -> print_statement','declaration',1,'p_declaration','sintaxis.py',60),
  ('declaration -> conditional_statement','declaration',1,'p_declaration','sintaxis.py',61),
  ('declaration -> call_function','declaration',1,'p_declaration','sintaxis.py',62),
  ('declaration -> expressionop','declaration',1,'p_declaration','sintaxis.py',63),
  ('declaration -> expressionop PUNTO_Y_COMA','declaration',2,'p_declaration','sintaxis.py',64),
  ('call_function -> OPERADOR_FLUJO ID PUNTO_Y_COMA','call_function',3,'p_call_function','sintaxis.py',71),
  ('variable_declaration -> VARIABLE ID ASIGNACION expression PUNTO_Y_COMA','variable_declaration',5,'p_variable_declaration','sintaxis.py',78),
  ('expression -> NUMERO','expression',1,'p_expression_number','sintaxis.py',85),
  ('expression -> ID','expression',1,'p_expression_number','sintaxis.py',86),
]
